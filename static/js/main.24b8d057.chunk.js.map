{"version":3,"sources":["components/TimerSetting.js","components/Timer.js","components/Controls.js","components/KeyboardInfo.js","App.js","index.js","sound/gameboy-startup-sound.mp3"],"names":["TimerSetting","_ref","type","value","handleTimerSetting","altKbd","react_default","a","createElement","className","onClick","e","timerBtn","target","closest","id","concat","toUpperCase","slice","name","data-kbd","data-alt-kbd","Timer","label","timeLeft","mm","Math","trunc","ss","Controls","active","toggleTimer","resetTimer","style","backgroundImage","KeyboardInfo","App","state","sessionLength","breakLength","mode","pomodoro","audioRef","React","createRef","_this","newLength","Number","setState","stopTimer","setInterval","newSetting","current","play","pause","currentTime","clearInterval","window","addEventListener","button","preventDefault","ctrlKey","document","querySelector","key","click","classList","remove","add","components_TimerSetting","this","components_Timer","components_Controls","src","alarm_mp3","ref","components_KeyboardInfo","Component","ReactDOM","render","src_App_0","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.24b8d057.chunk.js","sourcesContent":["import React from 'react';\n\nconst TimerSetting = ({ type, value, handleTimerSetting, altKbd }) => {\n  const handleClick = e => {\n    const timerBtn = e.target.closest('button');\n\n    if (!timerBtn) return;\n\n    handleTimerSetting(timerBtn);\n  };\n  \n  return (\n    <div className=\"TimerSetting\" onClick={ handleClick }>\n      <div id={ `${type}-label` }>\n        { type[0].toUpperCase() + type.slice(1) } Length\n      </div>\n\n      <div className=\"TimerSetting-controls\">\n        <button \n          className=\"TimerSetting-btn\" \n          name={ `${type}Length` } \n          id={ `${type}-decrement` }\n          data-kbd=\"ArrowDown\"\n          data-alt-kbd={ altKbd }\n          value=\"-1\">\n          &darr;\n        </button>\n\n        <div id={ `${type}-length` }>\n          { value }\n        </div>\n        \n        <button \n          className=\"TimerSetting-btn\" \n          name={ `${type}Length` } \n          id={ `${type}-increment` }\n          data-kbd=\"ArrowUp\"\n          data-alt-kbd={ altKbd } \n          value=\"1\">\n          &uarr;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerSetting;\n","import React from 'react';\n\nconst Timer = ({ label, timeLeft }) => {\n  let mm = Math.trunc(timeLeft / 60);\n  if (mm < 10) mm = '0' + mm;\n  \n  let ss = timeLeft % 60;\n  if (ss < 10) ss = '0' + ss;\n\n  return (\n    <div id=\"display\">\n      <div id=\"timer-label\">\n        { label[0].toUpperCase() + label.slice(1) }\n      </div>\n      <div id=\"time-left\">\n        { `${mm}:${ss}` }\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\n\nconst Controls = ({ active, toggleTimer, resetTimer }) => {\n  return (\n    <div className=\"controls\">\n      <button \n        className=\"timer-btn\" \n        id=\"start_stop\"\n        data-kbd=\" \" \n        onClick={ toggleTimer }\n        style={{ backgroundImage: active \n          ? 'url(https://i.postimg.cc/k43V7p1P/colored-pause.png)' \n          : 'url(https://i.postimg.cc/QCgcL3hz/colored-play.png)' }}>\n        <span className=\"sr-only\">{ active ? 'Stop' : 'Start'}</span>\n      </button>\n      \n      <button \n        className=\"timer-btn\" \n        id=\"reset\"\n        data-kbd=\"Backspace\" \n        onClick={ resetTimer }>\n        <span className=\"sr-only\">Reset</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\n\nconst KeyboardInfo = () => {\n  return (\n    <div id=\"keyboard-info\">\n      <p>\n        Session length <span className=\"colored-text\">UP</span> or <span className=\"colored-text\">DOWN</span>\n      </p>\n      <p>\n        Break length <span className=\"colored-text\">CTRL + UP</span> or <span className=\"colored-text\">CTRL + DOWN</span>\n      </p>\n      <p>Start/stop <span className=\"colored-text\">SPACEBAR</span></p>\n      <p>Reset <span className=\"colored-text\">BACKSPACE</span></p>\n    </div>\n  );\n};\n\nexport default KeyboardInfo;\n","import React from 'react';\nimport './App.css';\nimport TimerSetting from './components/TimerSetting';\nimport Timer from './components/Timer';\nimport Controls from './components/Controls';\nimport KeyboardInfo from './components/KeyboardInfo';\n// Note used, see component for notes\n// import Alarm from './components/Alarm';\nimport alarm_mp3 from './sound/gameboy-startup-sound.mp3';\n\n\nclass App extends React.Component {\n  state = {\n    sessionLength: 25,\n    breakLength: 5,\n    timeLeft: 25 * 60,\n    mode: 'session',\n    active: false\n  };\n\n  pomodoro = null;\n  audioRef = React.createRef();\n\n  componentDidMount() {\n    window.addEventListener('keyup', e => {\n      e.preventDefault();\n\n      let button;\n\n      if (e.ctrlKey) {\n        button = document.querySelector(`[data-kbd=\"${e.key}\"][data-alt-kbd=\"true\"]`);\n      } else {\n        button = document.querySelector(`[data-kbd=\"${e.key}\"]`);\n      }\n\n      if (!button) return;\n\n      button.click();\n\n      button.addEventListener('transitionend', () => button.classList.remove('keypress'));\n      button.classList.add('keypress');\n    });\n  };\n\n  handleTimerSetting = timerBtn => {\n    if (this.state.active) return;\n\n    const { name, value } = timerBtn;\n\n    const newLength = this.state[name] + Number(value);\n    if (newLength <= 0 || newLength > 60) return;\n\n    if (name === 'sessionLength') {\n      this.setState({\n        sessionLength: newLength,\n        timeLeft: newLength * 60\n      });\n    } else {\n      this.setState({\n        breakLength: newLength\n      });\n    };\n  };\n\n  toggleTimer = () => {\n    if (this.pomodoro) return this.stopTimer();\n\n    this.setState({ active: true });\n\n    this.pomodoro = setInterval(() => {\n      if (+this.state.timeLeft === 0) {\n        const newSetting = this.state.mode === 'session' \n          ? { mode: 'break', timeLeft: this.state.breakLength * 60 }\n          : { mode: 'session', timeLeft: this.state.sessionLength * 60 };\n\n        this.setState(newSetting);\n        this.audioRef.current.play();\n      } else {\n        this.setState({ timeLeft: this.state.timeLeft - 1 });\n      }\n    }, 1000);\n  };\n\n  resetTimer = () => {\n    this.setState({\n      sessionLength: 25,\n      breakLength: 5,\n      timeLeft: 25 * 60,\n      mode: 'session'\n    });\n\n    this.stopTimer();\n    this.audioRef.current.pause();\n    this.audioRef.current.currentTime = 0;\n  };\n\n  stopTimer = () => {\n    clearInterval(this.pomodoro);\n    this.pomodoro = null;\n    return this.setState({ active: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 id=\"title\">Pomodoro Clock</h1>\n        <div className=\"settings-container\">\n          <TimerSetting \n            type=\"session\" \n            value={ this.state.sessionLength }\n            handleTimerSetting={ this.handleTimerSetting }\n          />\n          <TimerSetting \n            type=\"break\" \n            value={ this.state.breakLength }\n            handleTimerSetting={ this.handleTimerSetting }\n            altKbd={ true } \n          />\n        </div>\n        <Timer\n          label={ this.state.mode } \n          timeLeft={ this.state.timeLeft }\n          toggleTimer={ this.toggleTimer }\n          resetTimer={ this.resetTimer }\n        />\n        <Controls\n          active={ this.state.active } \n          toggleTimer={ this.toggleTimer }\n          resetTimer={ this.resetTimer } \n        />\n        {/* <Alarm timeLeft={ this.state.timeLeft } /> */}\n        <audio \n          id=\"beep\" \n          // src=\"http://docs.google.com/uc?export=open&id=1C1XDqcVcqeCaxxALqXwp6HkAgj_7fs5D\" \n          src={ alarm_mp3 }\n          type=\"audio/mp3\" \n          ref={ this.audioRef }\n        /> \n        <KeyboardInfo />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/gameboy-startup-sound.790aac18.mp3\";"],"sourceRoot":""}